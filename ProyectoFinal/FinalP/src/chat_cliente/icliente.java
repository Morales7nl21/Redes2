package chat_cliente;

import chat_interfaces.constantEmotes;
import chat_interfaces.constantImages;
import java.awt.Color;
import java.awt.Point;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.util.ArrayList;
import java.util.List;
import javax.swing.*;


public class icliente extends javax.swing.JFrame implements constantImages, constantEmotes {

    private MulticastClient cliente;
    private String user = "";
    private String privateTo = "";
    private String textoChat = "";
    private List<String> listaConectados;
    private DefaultListModel modelo, modelo2;

    public icliente(String name) {
        if (name != null) {
            setNombreC(name);
            initComponents();

            this.setBounds(0, 0, 767, 520);
            this.setBackground(Color.black);

            txtChat.setContentType("text/html");
            txtChat.setEditable(false);
            txtChat.setText("");

            txtEstado.setText(getNombreC());
            listaConectados = new ArrayList<>();
            inicioCliente();

            txtEstado.setText("Usuario: " + user);

            listConectados.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    JList list = (JList) evt.getSource();
                    if (evt.getClickCount() == 2) {
                        int index = list.locationToIndex(evt.getPoint());
                        privateTo = (String) modelo.getElementAt(index);
                        String texto = JOptionPane.showInputDialog("Mensaje privado a " + privateTo);
                        if (texto != null) {
                            cliente.MandaMsj("<privado><" + user + "><" + privateTo + ">" + texto);
                        }
                    }
                }
            });

            listZum.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent evt) {
                    JList list = (JList) evt.getSource();
                    if (evt.getClickCount() == 2) {
                        int index = list.locationToIndex(evt.getPoint());
                        privateTo = (String) modelo2.getElementAt(index);
                        cliente.MandaMsj("<privado><" + user + "><" + privateTo + "><zumbido>");
                    }
                }

            });
        }
    }

    public void inicioCliente() {
        try {
            cliente = new MulticastClient(this);
            cliente.start();
            cliente.MandaMsj("<inicio>" + user);
            cliente.MandaMsj("<msj><b>" + user + "</b> se ha conectado.");
        } catch (Exception e) {
            System.err.println(e);
        }       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtEstado = new javax.swing.JLabel();
        txtEnvia = new javax.swing.JTextField();
        btnEnviar = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtChat = new javax.swing.JEditorPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        listConectados = new javax.swing.JList();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listZum = new javax.swing.JList();
        jLabel4 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));
        setResizable(false);
        setSize(new java.awt.Dimension(774, 476));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });
        getContentPane().setLayout(null);

        txtEstado.setBackground(new java.awt.Color(255, 0, 51));
        txtEstado.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        txtEstado.setText("Desconectado");
        getContentPane().add(txtEstado);
        txtEstado.setBounds(18, 43, 406, 21);
        getContentPane().add(txtEnvia);
        txtEnvia.setBounds(0, 399, 508, 39);

        btnEnviar.setText("Enviar");
        btnEnviar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEnviarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEnviar);
        btnEnviar.setBounds(516, 405, 235, 33);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Dialog", 3, 18)); // NOI18N
        jLabel1.setText("Usuarios conectados");
        getContentPane().add(jLabel1);
        jLabel1.setBounds(519, 14, 210, 24);

        jLabel2.setBackground(new java.awt.Color(204, 0, 51));
        jLabel2.setFont(new java.awt.Font("Gabriola", 2, 24)); // NOI18N
        jLabel2.setText("ESCOMESSENGER");
        getContentPane().add(jLabel2);
        jLabel2.setBounds(18, 6, 406, 42);

        jScrollPane1.setAutoscrolls(true);

        txtChat.setContentType("txt/html");
        txtChat.setSelectionColor(new java.awt.Color(255, 64, 129));
        jScrollPane1.setViewportView(txtChat);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(0, 81, 508, 312);

        listConectados.setBackground(new java.awt.Color(204, 255, 255));
        listConectados.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listConectados.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 12)); // NOI18N
        listConectados.setForeground(new java.awt.Color(0, 102, 102));
        jScrollPane2.setViewportView(listConectados);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(514, 81, 235, 131);

        jLabel3.setBackground(new java.awt.Color(255, 0, 51));
        jLabel3.setFont(new java.awt.Font("Dialog", 3, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 0, 0));
        jLabel3.setText("Clic Privado");
        getContentPane().add(jLabel3);
        jLabel3.setBounds(514, 43, 167, 32);

        listZum.setBackground(new java.awt.Color(204, 255, 255));
        listZum.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        listZum.setFont(new java.awt.Font("Franklin Gothic Medium", 2, 14)); // NOI18N
        listZum.setForeground(new java.awt.Color(0, 102, 102));
        jScrollPane4.setViewportView(listZum);

        getContentPane().add(jScrollPane4);
        jScrollPane4.setBounds(514, 262, 235, 131);

        jLabel4.setBackground(new java.awt.Color(255, 0, 51));
        jLabel4.setFont(new java.awt.Font("Dialog", 3, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("Zumbidos !!!");
        getContentPane().add(jLabel4);
        jLabel4.setBounds(514, 224, 167, 32);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEnviarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEnviarActionPerformed

        String texto = txtEnvia.getText();
        cliente.MandaMsj("<msj><" + user + ">" + texto);
        txtEnvia.setText("");
    }//GEN-LAST:event_btnEnviarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing

        cliente.MandaMsj("<fin>" + user);
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(icliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(icliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(icliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(icliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        String nombreT = JOptionPane.showInputDialog(null, "Ingresa tu nombre:");
        java.awt.EventQueue.invokeLater(() -> {
            new icliente(nombreT).setVisible(true);
        });
        //ic.jTextField1.setText(nombreC); 

    }

    public void Agregar_conversacion(String msj) throws InterruptedException {
        String senderUser;
        String toUser;
        System.out.println(msj);
        msj = msj.replaceAll(AMOREMOTE, AMOR);
        msj = msj.replaceAll(ENOJOAMOTE, ENOJO);
        msj = msj.replaceAll(RISAEMOTE, RISA);
        msj = msj.replaceAll(LOCOEMOTE, LOCO);
        msj = msj.replaceAll(HOMEROEMOTE, HOMERO);

        if (msj.contains("<msj>")) {
            senderUser = msj.split("<")[2].split(">")[0];
            if (senderUser.equals("b")) { //capturamos bold style
                textoChat = textoChat + "<br/><br/>" + msj;
            } else {
                textoChat = textoChat + "<br/><br/><b>" + senderUser + "</b>:<br/>" + msj;
            }
            txtChat.setText(textoChat);
        } else if (msj.contains("<inicio>")) {
            String replace = msj.replace("<inicio>", "");
            boolean add = listaConectados.add(replace);
            if (add) {
                System.out.println("Se agrego de manera exitosa a la listaConectados: " + replace);
            } else {
                System.err.println("Algo salio mal, en listConectados");
            }
        } else if (msj.contains("<fin>")) {
            String r = Integer.toHexString(231);
            String g = Integer.toHexString(76);
            String b = Integer.toHexString(90);
            String color = r + g + b;

            textoChat = textoChat + "<div style=\"color:#" + color + "\"><h3><b>''" + msj + "'' se ha desconectado</b></h3><br/></div>";
            txtChat.setText(textoChat);
        } else if (msj.contains("<conectados>")) {
            //Se actualiza la lista cada que se conecta uno mas 
            updateUsersList(msj);
        } else if (msj.contains("privado")) {
            senderUser = msj.split("<")[2].replace(">", "");
            toUser = msj.split("<")[3].split(">")[0];
            if (toUser.equals(user)) {
                if (msj.contains("<zumbido>")) {
                    String r = Integer.toHexString(88);
                    String g = Integer.toHexString(214);
                    String b = Integer.toHexString(141);
                    String color = r + g + b;
                    textoChat = textoChat + "<div style=\"color:#" + color + "\"><h3><b> Zumbido por: " + senderUser + "</b></h3>:<br/>" + msj + "</div>";
                    txtChat.setText(textoChat);
                    Point pont = this.getLocation();
                    for (int i = 0; i < 40; i++) {
                        if (i % 4 == 0) {
                            int x = pont.x + 5;
                            int y = pont.y;
                            this.setLocation(x, y);
                        }
                        if (i % 4 == 1) {
                            int x = pont.x - 5;
                            int y = pont.y;
                            this.setLocation(x, y);
                        }
                        if (i % 4 == 2) {
                            int x = pont.x;
                            int y = pont.y + 5;
                            this.setLocation(x, y);
                        }
                        if (i % 4 == 3) {
                            int x = pont.x;
                            int y = pont.y - 5;
                            this.setLocation(x, y);
                        }

                        Thread.sleep(10);
                    }
                } else {
                    String r = Integer.toHexString(155);
                    String g = Integer.toHexString(89);
                    String b = Integer.toHexString(182);
                    String color = r + g + b;
                    textoChat = textoChat + "<div style=\"color:#" + color + "\"><b>Mensaje privado de " + senderUser + "</b>:<br/>" + msj + "</div>";
                    txtChat.setText(textoChat);
                }
            }
        }
    }

    public void updateUsersList(String usersCSV) {

        String[] users = usersCSV.split(",");
        modelo = new DefaultListModel();
        modelo2 = new DefaultListModel();
        listConectados.removeAll();
        listZum.removeAll();

        for (String user : users) {
            String replace = user.replace("conectados", "");
            replace = user.trim();
            //JOptionPane.showMessageDialog(null, replace);
            if (!replace.contains("conectados") || replace.isEmpty()) {
                modelo.addElement(replace);
                modelo2.addElement(replace);
            }
        }

        listConectados.setModel(modelo);
        listZum.setModel(modelo2);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnEnviar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JList listConectados;
    private javax.swing.JList listZum;
    public javax.swing.JEditorPane txtChat;
    private javax.swing.JTextField txtEnvia;
    private javax.swing.JLabel txtEstado;
    // End of variables declaration//GEN-END:variables

    //GETTERS Y SETTERS
    public void setNombreC(String nombreC) {
        this.user = nombreC;
    }

    public String getNombreC() {
        return user;
    }
}
